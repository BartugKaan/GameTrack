// <auto-generated />
using System;
using GameTrack.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameTrack.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241018095707_DebugForGenre")]
    partial class DebugForGenre
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("GameTrack.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Developer")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FinishedDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Genre")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GenreNavigationGenreId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Review")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GenreNavigationGenreId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("GameTrack.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            Name = "Action"
                        },
                        new
                        {
                            GenreId = 2,
                            Name = "Adventure"
                        },
                        new
                        {
                            GenreId = 3,
                            Name = "RPG"
                        },
                        new
                        {
                            GenreId = 4,
                            Name = "Simulation"
                        },
                        new
                        {
                            GenreId = 5,
                            Name = "Strategy"
                        },
                        new
                        {
                            GenreId = 6,
                            Name = "Sports"
                        },
                        new
                        {
                            GenreId = 7,
                            Name = "Puzzle"
                        });
                });

            modelBuilder.Entity("GameTrack.Models.Game", b =>
                {
                    b.HasOne("GameTrack.Models.Genre", "GenreNavigation")
                        .WithMany("Games")
                        .HasForeignKey("GenreNavigationGenreId");

                    b.Navigation("GenreNavigation");
                });

            modelBuilder.Entity("GameTrack.Models.Genre", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
